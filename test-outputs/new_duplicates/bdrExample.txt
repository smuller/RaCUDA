
 MAX COMPLEXITY IS 1 

INFO - [CUDA_optimize] - Running Branch Distribution with cutoff of 0 
INFO - [CUDA_optimize] - Running Global to Shared on array params: []

adjustIncrement:
    Bound: 337
    Number of LP variables: 347
    Number of LP constraints: 373
    Maximum focus functions in use: 23
    LP solver time: 0.002s
    

adjustIncrement:
    Bound: 229
    Number of LP variables: 167
    Number of LP constraints: 187
    Maximum focus functions in use: 11
    LP solver time: 0.001s
    
INFO - [OptDriver] - Greedy best cutoff is 0

adjustIncrement:
    Bound: 337
    Number of LP variables: 347
    Number of LP constraints: 373
    Maximum focus functions in use: 23
    LP solver time: 0.001s
    

INFO - [CUDA_optimize] - Running Branch Distribution with cutoff of 0 
INFO - [CUDA_optimize] - Running Global to Shared on array params: [d]

INFO - [CUDA_optimize] - Running Branch Distribution with cutoff of 0 
INFO - [CUDA_optimize] - Running Global to Shared on array params: [incr]
INFO - [OptDriver] - Checking unused params for greedy improvement
INFO - [OptDriver] - Analysis for Branch Distribution of 0 
INFO - [OptDriver] - Running Global to Shared on array params: [d] 

adjustIncrement:
    Bound: 251
    Number of LP variables: 107
    Number of LP constraints: 125
    Maximum focus functions in use: 7
    LP solver time: 0.001s
    
INFO - [OptDriver] - Analysis for Branch Distribution of 0 
INFO - [OptDriver] - Running Global to Shared on array params: [incr] 

adjustIncrement:
    Bound: 265
    Number of LP variables: 167
    Number of LP constraints: 187
    Maximum focus functions in use: 11
    LP solver time: 0.001s
    
INFO - [OptDriver] - Greedy improvement detected, setting Global to Shared to [d] 

INFO - [CUDA_optimize] - Running Branch Distribution with cutoff of 0 
INFO - [CUDA_optimize] - Running Global to Shared on array params: [d,incr]
INFO - [OptDriver] - Checking unused params for greedy improvement
INFO - [OptDriver] - Analysis for Branch Distribution of 0 
INFO - [OptDriver] - Running Global to Shared on array params: [d,incr] 

adjustIncrement:
    Bound: 287
    Number of LP variables: 107
    Number of LP constraints: 125
    Maximum focus functions in use: 7
    LP solver time: 0.001s
    
INFO - [OptDriver] - No Greedy improvement, we have found the best set
Best Code generation:

__global__ adjustIncrement ( unsigned int *d,  unsigned int *incr,  int input_size) {

    signed long int lower_bound_d1;
    lower_bound_d1 = (threadIdx.x * 2) + ((blockIdx.x * blockDim.x) * 2);
    __shared__ unsigned int d1[blockDim.x];
    d1[(blockIdx.x * blockDim.x) + threadIdx.x] = d[((blockIdx.x * blockDim.x)
                                                     + threadIdx.x)
                                                    + lower_bound_d1];
    signed long int lower_bound_d2;
    lower_bound_d2 = (threadIdx.x * 2)
                     + (((blockIdx.x * blockDim.x) * 2) + 1);
    __shared__ unsigned int d2[blockDim.x];
    d2[(blockIdx.x * blockDim.x) + threadIdx.x] = d[((blockIdx.x * blockDim.x)
                                                     + threadIdx.x)
                                                    + lower_bound_d2];
    int pos;
    pos = (((blockIdx.x * blockDim.x) * 2) + (threadIdx.x * 2)) + 1;
    if (pos < input_size) {
    
        d2[pos - lower_bound_d2] = d2[pos - lower_bound_d2] + incr[blockIdx.x];
    } else {
    
         
    } 
    d1[(pos - 1) - lower_bound_d1] = d1[(pos - 1) - lower_bound_d1]
                                     + incr[blockIdx.x];
    d1[((blockIdx.x * blockDim.x) + threadIdx.x) + lower_bound_d1] = d[(
                                                                    blockIdx.x
                                                                    * 
                                                                    blockDim.x)
                                                                    + threadIdx.x];
    d2[((blockIdx.x * blockDim.x) + threadIdx.x) + lower_bound_d2] = d[(
                                                                    blockIdx.x
                                                                    * 
                                                                    blockDim.x)
                                                                    + threadIdx.x]; 
}

Optimal Branch Distribution cutoff: 0
Optimal Params to move to shared: [d]

251
Program Statistics:
    Total runtime: 0.320s
