#!/bin/sh

findlib() {
	lib=$1
	arg=$2
	for p in / /usr /usr/local /opt/local $arg
	do
		if test -d $p &&
		   find $p/lib/x86_64-linux-gnu -maxdepth 1 -name lib$lib\* |
		     grep '$' > /dev/null
		then
			echo $p
			return
		fi
	done
	echo "✗ could not find library $lib" 1>&2
}

if test -f config.mk
then
	# Reload last configuration
	. ./config.mk
fi

usage() {
	cat << EOM
usage: ./configure [options]

Options:
	-prefix PATH      The installation prefix path
	-prefix=PATH
	-gmp PATH         The directory containing the GMP library
	-mpfr PATH        The directory containing the MPFR library
	-gsl PATH 		  The path containing the GSL library

	-llvm-config CMD  The name used to invoke llvm-config
	-cxx CMD          The C++ compiler to use (must support C++11)
	-cc CMD           The C compiler to use (must support C99)

	-help             Display this help message
EOM
	exit 0
}

TOOL_NAME=absynth-cuda
OUR_PREFIX=/usr
LLC=llvm-config
CXX=c++
CC=cc

while test $# -gt 0
do
	arg=$1
	shift
	case $arg in
	--prefix=*|-prefix=*)
		OUR_PREFIX=${arg#*=}
		;;
	--prefix|-prefix)
		test $# -gt 0 || usage
		OUR_PREFIX=$1
		shift
		;;
	--gmp|-gmp)
		test $# -gt 0 || usage
		GMP_PREFIX=$(dirname $1)
		shift
		;;
	--mpfr|-mpfr)
		test $# -gt 0 || usage
		MPFR_PREFIX=$(dirname $1)
		shift
		;;
	--gsl|-gsl)
		test $# -gt 0 || usage
		GSL_PREFIX=$(dirname $1)
		shift
		;;
	--llvm-config|-llvm-config)
		test $# -gt 0 || usage
		LLC=$1
		shift
		;;
	--cc|-cc)
		test $# -gt 0 || usage
		CC=$1
		shift
		;;
	--cxx|-cxx)
		test $# -gt 0 || usage
		CXX=$1
		shift
		;;
	*)
		usage
		;;
	esac
done

$CC -std=c99 -x c - 2> /dev/null << EOF
struct S {int i; char c[];};
int main() { return sizeof(struct S) - sizeof(int); }
EOF
test $? -eq 0 && ./a.out
can_c99=$?
rm -f ./a.out
if test $can_c99 -ne 0
then
	echo "✗ $CC cannot compile C99 code" 1>&2
	exit 1
fi

$CXX -std=c++11 -x c++ - 2> /dev/null << EOF
#include <functional>
int main() { auto f = [] { return 0; }; return f(); }
EOF
test $? -eq 0 && ./a.out
can_cxx11=$?
rm -f ./a.out
if test $can_cxx11 -ne 0
then
	echo "✗ $CXX cannot compile C++11 code" 1>&2
	exit 1
fi

if ! ( ocamlbuild -vnum; ) > /dev/null 2>&1
then
	echo "✗ ocamlbuild cannot be run" 1>&2
	exit 1
fi

# if false; then
if ! ( $LLC --version; ) > /dev/null 2>&1
then
	LLC=
	echo "✗ warning: llvm-config not found, llvm-reader will not be built"
fi
#fi
#LLC=

GMP_PREFIX=$(findlib gmp $GMP_PREFIX)
#test -n "$GMP_PREFIX" || exit 1

MPFR_PREFIX=$(findlib mpfr $MPFR_PREFIX)
#test -n "$MPFR_PREFIX" || exit 1

GSL_PREFIX=$(findlib gsl $GSL_PREFIX)
#test -n "$GSL_PREFIX" || exit 1

cat > config.mk << EOF
# Automatically generated by the configure script.

TOOL_NAME=$TOOL_NAME
OUR_PREFIX=$OUR_PREFIX
GMP_PREFIX=$GMP_PREFIX
MPFR_PREFIX=$MPFR_PREFIX
GSL_PREFIX=$GSL_PREFIX
CXX=$CXX
CC=$CC
LLC=$LLC
EOF

if test -z $LLC
then
	buildllvm=no
else
	buildllvm=yes
fi

cat << EOM
Configuration:

   Installation prefix: $OUR_PREFIX
   MPFR library in:     $MPFR_PREFIX
   GMP library in:      $GMP_PREFIX
   GSL library in:      $GSL_PREFIX
   C++ compiler:        $CXX
   C compiler:          $CC
   Build llvm-reader:   $buildllvm

EOM
