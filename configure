#!/bin/sh

if test -f config.mk
then
	# Reload last configuration
	. ./config.mk
fi

usage() {
	cat << EOM
usage: ./configure [options]

Options:
	-prefix PATH      The installation prefix path
	-prefix=PATH
	-clp PATH         The directory containing the CLP library
	-coin-utils PATH  The directory containing the Coin-Or utilities

	-cxx CMD          The C++ compiler to use (must support C++11)
	-cc CMD           The C compiler to use (must support C99)

	-help             Display this help message
EOM
	exit 0
}

TOOL_NAME=absynth-cuda
OUR_PREFIX=/usr
CXX=c++
CC=cc
CLP_PREFIX=/usr/local
CUTILS_PREFIX=/usr/local/include/coin-or

while test $# -gt 0
do
	arg=$1
	shift
	case $arg in
	--prefix=*|-prefix=*)
		OUR_PREFIX=${arg#*=}
		;;
	--prefix|-prefix)
		test $# -gt 0 || usage
		OUR_PREFIX=$1
		shift
		;;
	--clp|-clp)
		test $# -gt 0 || usage
		CLP_PREFIX=$1
		shift
		;;
	--coin-utils|-coin-utils)
		test $# -gt 0 || usage
		CUTILS_PREFIX=$1
		shift
		;;
	--cc|-cc)
		test $# -gt 0 || usage
		CC=$1
		shift
		;;
	--cxx|-cxx)
		test $# -gt 0 || usage
		CXX=$1
		shift
		;;
	*)
		usage
		;;
	esac
done

$CC -std=c99 -x c - 2> /dev/null << EOF
struct S {int i; char c[];};
int main() { return sizeof(struct S) - sizeof(int); }
EOF
test $? -eq 0 && ./a.out
can_c99=$?
rm -f ./a.out
if test $can_c99 -ne 0
then
	echo "✗ $CC cannot compile C99 code" 1>&2
	exit 1
fi

$CXX -std=c++11 -x c++ - 2> /dev/null << EOF
#include <functional>
int main() { auto f = [] { return 0; }; return f(); }
EOF
test $? -eq 0 && ./a.out
can_cxx11=$?
rm -f ./a.out
if test $can_cxx11 -ne 0
then
	echo "✗ $CXX cannot compile C++11 code" 1>&2
	exit 1
fi

if ! ( ocamlbuild -vnum; ) > /dev/null 2>&1
then
	echo "✗ ocamlbuild cannot be run" 1>&2
	exit 1
fi

if !( test -f "$CLP_PREFIX/lib/libClp.a"; )
then
	echo "✗ libClp not found" 1>&2
	exit 1
fi

cat > config.mk << EOF
# Automatically generated by the configure script.

TOOL_NAME=$TOOL_NAME
OUR_PREFIX=$OUR_PREFIX
CLP_PREFIX=$CLP_PREFIX
CUTILS_PREFIX=$CUTILS_PREFIX
CXX=$CXX
CC=$CC
EOF


cat << EOM
Configuration:

   Installation prefix: $OUR_PREFIX
   CLP library in:      $CLP_PREFIX
   CoinUtils in:        $CUTILS_PREFIX
   C++ compiler:        $CXX
   C compiler:          $CC

EOM

